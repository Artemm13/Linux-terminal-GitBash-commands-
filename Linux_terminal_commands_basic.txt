1) Посмотреть где я: pwd

2) Создать папку: mkdir foldername

3) Зайти в папку: cd foldername

4) Создать 3 папки: mkdir name1 name2 name3 //папки создаются на одном уровне

5) Зайти в любую папку: cd name3

6) Создать 5 файлов (3 txt, 2 json): touch file1.txt file2.txt file3.txt file4.json file5.json;

7) Создать 3 папки - mkdir -p name4/name5/name6; //папки создаются одна в одной

8. Вывести список содержимого папки – ls -la; //a – показывает скрытые файлы

9) + Открыть любой txt файл – cat > file2.txt

10) + написать туда что-нибудь, любой текст – Any text

11) + сохранить и выйти – ctrl+c

12) Выйти из папки на уровень выше – cd ..

13) переместить любые 2 файла, которые вы создали, в любую другую папку – mv name3/file1.txt name3/file2.txt name1

14) скопировать любые 2 файла, которые вы создали, в любую другую папку – cp name3/file4.json name3/file5.json name2

15) Найти файл по имени – find -name file3.txt

16) просмотреть содержимое в реальном времени (команда grep) изучите как она работает – 
//Grep дает очень много возможностей для фильтрации текста. Можно выбирать нужные строки из текстовых файлов, отфильтровать вывод команд, и даже искать файлы в файловой системе, которые содержат определённые строки. А команда tail показывает изменения файла в реальной времени.
Можно объединить tail и grep:
Строки с искомыми словами не раскрывают необходимых деталей. Поэтому используем команду grep, чтобы показать несколько строк до и после искомого термина с опцией -C.
tail -f log_file | grep -C 3 search_term
Выводятся строки, соответствующие поисковому запросу, а также 3 строки до и после него. Это даст лучшее представление о том, что происходит. Можно использовать grep для нескольких поисковых запросов и даже сделать поиск без учета регистра:
tail -f log_file | grep -C 3 -i - E 'search_term_1|search_term_2'//

17) вывести несколько первых строк из текстового файла – head -2 file1.txt;

18) вывести несколько последних строк из текстового файла – tail -2 file1.txt

19) просмотреть содержимое длинного файла (команда less) изучите как она работает – less file1.txt
//Команда less позволяет просматривать содержимое текстовых файлов и прочих данных в постраничном режиме.
Управление:
стрелка_вверх (Перемещение на одну строку вверх)
стрелка_вниз (Перемещение на одну строку вниз)
PageUp (Перемещение на одну страницу вверх)
PageDown или ПРОБЕЛ (Перемещение на одну страницу вниз)
ENTER (Перемещение на одну строку вниз)
d (Перемещение на пол страницы вниз)
b (Перемещение на одну страницу вверх)
g (перемещение в начало файла)
shift+g (перемещение в конец файла)
/текст/ (Поиск по указанному тексту вперед)
?текст? (Поиск по указанному тексту назад)
:n (следующий файл)
:p (предыдущий файл)
:d (закрытие текущего файла)
shift+f (позволяет просматривать новые строки в реальном времени, на подобии tail -f)
ctrl+c (отключение просмотра новых строк)
v (запустить редактор)
h (Справка)
q (Выход)

20) вывести дату и время – date.

***

1) Отправить http запрос на сервер.
http://162.55.220.72:5006/terminal-hw-request

curl http://162.55.220.72:5006/terminal-hw-request
{
  "Intro": "Hello!! This is your the first response from server", 
  "Tasks": {
    "Task_1": "Send the next URL in terminal: http://162.55.220.72:5005/get_method?name=(set_your_String)&age=(set_your_number)", 
    "result": [
      "Your_String", 
      "Your_number"
    ]
  }
}


curl "http://162.55.220.72:5005/get_method?name=Artem&age=37"      

[
  "Artem", 
  "37"
]


2) Написать скрипт который выполнит автоматически пункты 3, 4, 5, 6, 7, 8, 13

- touch script.sh
- vim script.sh
- добавляем все необходимые команды из пунктов 3, 4, 5, 6, 7, 8, 13:
cd foldername
mkdir name1 name2 name3
cd name3
touch file1.txt file2.txt file3.txt file4.json file5.json
mkdir -p name4/name5/name6
ls -la
cd ..
mv name3/file1.txt name1
mv name3/file2.txt name1
:w
:q
- sh script.sh

 
